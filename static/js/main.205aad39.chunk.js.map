{"version":3,"sources":["BuyStyle.js","BuyColor.js","StyleSelector.js","SubStyleSelector.js","BarkingBot.js","App.js","index.js"],"names":["BuyStyle","stylesKeys","Object","keys","this","props","styles","shift","mappedStylesKeys","map","key","bought","className","x","onClick","buy","value","disabled","subStyles","filled","styleFamily","React","Component","BuyColor","type","ref","innerRef","forwardRef","StyleSelector","onChange","SubStyleSelector","subStyle","currentStyleSelector","currentSubStyleSelector","triangles","simple","squares","rectangles","points4","points5","circles","BarkingBot","state","paused","oneAction","bind","drawLine","drawTriangle","drawPoints4","drawPoints5","handleClear","setState","refs","botId","getContext","clearRect","width","height","ctx","stylesArray","randomStyle","Math","floor","random","length","subStylesArray","randomSubStyleIndex","randomSubStyle","colorArray","colors","randomColor","drawSquare","drawRectangle","drawCircle","prevProps","stylesBought","push","subStylesOf","subStylesOfBought","otherKey","prevState","console","log","setInterval","color","context","y","strokeStyle","beginPath","moveTo","lines","lineTo","stroke","fillStyle","fill","strokeRect","fillRect","drawPoints","number","i","arc","PI","handleOnClickBot","range","rgbToHex","hex","Number","toString","App","currentColorSelector","currentRepeaterSelector","currentCoins","bots","botsBought","colorroulette","styleroulette","repeater","shop","bot","upperleft","upperright","canvas","bottomleft","bottomright","draw","clear","id","defaultValue","handleOnChangeTimesSelector","checked","handleOnChangeStyleRoulette","handleOnChangeColorRoulette","handleOnChangeStyleSelector","handleOnChangeSubStyleSelector","handleOnChangeColorSelector","style","backgroundColor","timesselector","styleselector","mainStyle","substyleselector","colorselector","event","item","target","attributes","nodeValue","alert","colorBought","r","g","b","times","chosenColor","chosenStyle","chosenSubStyle","drawingFunctions","styleArray","boughtStyles","randomIndex","subStyleArray","boughtSubStyles","anotherRandomIndex","Index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.205aad39.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass BuyStyle extends React.Component {\r\n    render() {\r\n        let stylesKeys = Object.keys(this.props.styles)\r\n        stylesKeys.shift()  \r\n        let mappedStylesKeys = stylesKeys.map((key) => { return [key, this.props.styles[key].bought] })\r\n              \r\n        return (\r\n            <div>\r\n                <div className=\"buy-styles\">{stylesKeys.map((x) => !this.props.styles[x].bought && <div><input\r\n                    onClick={this.props.onClick}\r\n                    buy={x}\r\n                    value={`Buy ${x} for 10 borkcoins`}\r\n                    disabled={this.props.styles[x].bought}\r\n                /></div>)}\r\n                </div>\r\n                <div className=\"style\">\r\n                    {mappedStylesKeys.map((x) => x[1] === true  && !this.props.styles[x[0]].subStyles.filled.bought &&\r\n                        <div>\r\n                            <p\r\n                                onClick={this.props.onClick}\r\n                                buy=\"filled\"\r\n                                styleFamily={x[0]}\r\n                            >💰 and buy filled {x[0]} for 100 borkcoins!</p></div>)}\r\n                </div>\r\n\r\n                <div className=\"style\"\r\n                onClick={this.props.onClick}\r\n                buy=\"repeater\">Buy a repeater for 100 coins!</div>\r\n                <div className=\"style\"\r\n                onClick={this.props.onClick}\r\n                buy=\"bot\">Buy a bot for 100 coins!</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default BuyStyle","import React from 'react'\r\n\r\nclass BuyColor extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"buy-color\">\r\n                <p>Buy a color for 5 borkcoins</p>\r\n                <input\r\n                    type=\"color\"\r\n                    ref={this.props.innerRef} />\r\n                <input\r\n                    buy='color'\r\n                    type=\"button\"\r\n                    value=\"Buy color\"\r\n                    onClick={this.props.onClick} />\r\n                <input\r\n                    buy=\"random-color\"\r\n                    type=\"button\"\r\n                    value=\"@\"\r\n                    onClick={this.props.onClick} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default React.forwardRef((props, ref) => <BuyColor\r\n    innerRef={ref} {...props} />);","import React from 'react'\r\n\r\nclass StyleSelector extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <select ref={this.props.innerRef} onChange={this.props.onChange}>\r\n                    {Object.keys(this.props.styles).map((x) =>\r\n                        <option\r\n                            disabled={!this.props.styles[x].bought}\r\n                            key={x}\r\n                            value={x}>\r\n                            {x}\r\n                        </option>)}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default React.forwardRef((props, ref) => <StyleSelector\r\n    innerRef={ref} {...props}\r\n/>);","import React from 'react'\r\n\r\nclass SubStyleSelector extends React.Component {\r\n    render() {\r\n        \r\n        let subStyle = this.props.styles[this.props.currentStyleSelector].currentSubStyleSelector\r\n        if (this.props.currentStyleSelector === \"lines\") {\r\n            return (\r\n                <select ref={this.props.innerRef} onChange={this.props.onChange} value={subStyle}>\r\n                    <option value=\"upperleft\">Upper left corner</option>\r\n                    <option value=\"upperright\">Upper right corner</option>\r\n                    <option value=\"bottomleft\">Bottom left corner</option>\r\n                    <option value=\"bottomright\">Bottom right corner</option>\r\n                </select>\r\n            )\r\n        }\r\n        else if (this.props.currentStyleSelector === \"triangles\") {\r\n            return (\r\n                <select ref={this.props.innerRef} onChange={this.props.onChange} value={subStyle}>\r\n                    <option value=\"simple\" disabled={!this.props.styles.triangles.subStyles.simple.bought}>Simple triangles</option>\r\n                    <option value=\"filled\" disabled={!this.props.styles.triangles.subStyles.filled.bought}>Filled triangles</option>\r\n                </select>\r\n            )\r\n        }\r\n        else if (this.props.currentStyleSelector === \"squares\") {\r\n            return (\r\n                <select ref={this.props.innerRef} onChange={this.props.onChange} value={subStyle}>\r\n                    <option value=\"simple\" disabled={!this.props.styles.squares.subStyles.simple.bought}>Simple square</option>\r\n                    <option value=\"filled\" disabled={!this.props.styles.squares.subStyles.filled.bought}>Filled square</option>\r\n                </select>\r\n            )\r\n        }\r\n        else if (this.props.currentStyleSelector === \"rectangles\") {\r\n            return (\r\n                <select ref={this.props.innerRef} onChange={this.props.onChange} value={subStyle}>\r\n                    <option value=\"simple\" disabled={!this.props.styles.rectangles.subStyles.simple.bought}>Simple rectangle</option>\r\n                    <option value=\"filled\" disabled={!this.props.styles.rectangles.subStyles.filled.bought}>Filled rectangle</option>\r\n                </select>\r\n            )\r\n        }\r\n        else if (this.props.currentStyleSelector === \"points4\") {\r\n            return (\r\n                <select ref={this.props.innerRef} onChange={this.props.onChange} value={subStyle}>\r\n                    <option value=\"simple\" disabled={!this.props.styles.points4.subStyles.simple.bought}>Simple 4 points</option>\r\n                    <option value=\"filled\" disabled={!this.props.styles.points4.subStyles.filled.bought}>Filled 4 points</option>\r\n                </select>\r\n            )\r\n        }\r\n        else if (this.props.currentStyleSelector === \"points5\") {\r\n            return (\r\n                <select ref={this.props.innerRef} onChange={this.props.onChange} value={subStyle}>\r\n                    <option value=\"simple\" disabled={!this.props.styles.points5.subStyles.simple.bought}>Simple 5 points</option>\r\n                    <option value=\"filled\" disabled={!this.props.styles.points5.subStyles.filled.bought}>Filled 5 points</option>\r\n                </select>\r\n            )\r\n        }\r\n        else if (this.props.currentStyleSelector === \"circles\") {\r\n            return (\r\n                <select ref={this.props.innerRef} onChange={this.props.onChange} value={subStyle}>\r\n                    <option value=\"simple\" disabled={!this.props.styles.circles.subStyles.simple.bought}>Simple circle</option>\r\n                    <option value=\"filled\" disabled={!this.props.styles.circles.subStyles.filled.bought}>Filled circle</option>\r\n                </select>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default React.forwardRef((props, ref) => <SubStyleSelector\r\n    innerRef={ref} {...props} />);","import React from 'react'\r\n\r\nclass BarkingBot extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            paused: false,\r\n        }\r\n        this.oneAction = this.oneAction.bind(this)\r\n        this.drawLine = this.drawLine.bind(this)\r\n        this.drawTriangle = this.drawTriangle.bind(this)\r\n        this.drawPoints4 = this.drawPoints4.bind(this)\r\n        this.drawPoints5 = this.drawPoints5.bind(this)\r\n        this.handleClear = this.handleClear.bind(this)\r\n\r\n    }\r\n\r\n    handleOnClickBot() {\r\n        this.setState((state) => ({ paused: !state.paused}))\r\n    }\r\n\r\n    handleClear() {\r\n        let ctx = this.refs[this.props.botId].getContext(\"2d\")\r\n        ctx.clearRect(0, 0, this.refs[this.props.botId].width, this.refs[this.props.botId].height);\r\n    }\r\n\r\n    oneAction() {\r\n        if (this.state.paused === true) { return \"\" }\r\n        else {\r\n            let botId = this.props.botId\r\n            let ctx = this.refs[botId].getContext(\"2d\")\r\n            \r\n            let stylesArray = Object.keys(this.state.styles)\r\n            let randomStyleIndex = Math.floor(Math.random() * stylesArray.length)\r\n            let randomStyle = stylesArray[randomStyleIndex]\r\n\r\n            let subStylesArray = Object.keys(this.state.styles[randomStyle])\r\n            let randomSubStyleIndex = Math.floor(Math.random() * subStylesArray.length)\r\n            let randomSubStyle = this.state.styles[randomStyle][randomSubStyleIndex]\r\n\r\n            let colorArray = Object.keys(this.props.colors)\r\n            let randomColorIndex = Math.floor(Math.random() * colorArray.length)\r\n            let randomColor = colorArray[randomColorIndex]\r\n\r\n            let drawingFunctions = {\r\n                \"lines\": this.drawLine,\r\n                \"triangles\": this.drawTriangle,\r\n                \"squares\": this.drawSquare,\r\n                \"rectangles\": this.drawRectangle,\r\n                \"points4\": this.drawPoints4,\r\n                \"points5\": this.drawPoints5,\r\n                \"circles\": this.drawCircle,\r\n            }\r\n            \r\n            drawingFunctions[randomStyle](randomColor, randomSubStyle, ctx, random(this.refs[botId].width), random(this.refs[botId].height))\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.styles !== this.props.styles) {\r\n            let stylesBought = []\r\n            Object.keys(this.props.styles).map((x) => { if (this.props.styles[x].bought === true) { stylesBought.push(x) } })\r\n            stylesBought.map((key) => {\r\n                let subStylesOf = Object.keys(this.props.styles[key].subStyles)\r\n                let subStylesOfBought = []\r\n                subStylesOf.map((otherKey) => { if (this.props.styles[key].subStyles[otherKey].bought === true) { subStylesOfBought.push(otherKey) } })\r\n                this.setState((prevState) => ({\r\n                    styles: {\r\n                        ...prevState.styles,\r\n                        [key]: subStylesOfBought\r\n                    }\r\n                }))\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let stylesBought = []\r\n        Object.keys(this.props.styles).map((x) => { if (this.props.styles[x].bought === true) { stylesBought.push(x) } })\r\n        stylesBought.map((key) => {\r\n            let subStylesOf = Object.keys(this.props.styles[key].subStyles)\r\n            let subStylesOfBought = []\r\n            subStylesOf.map((otherKey) => { if (this.props.styles[key].subStyles[otherKey].bought === true) { subStylesOfBought.push(otherKey) } })\r\n            console.log(subStylesOfBought)\r\n            this.setState((prevState) => ({\r\n                styles: {\r\n                    ...prevState.styles,\r\n                    [key]: subStylesOfBought\r\n                }\r\n            }))\r\n        })\r\n        setInterval(() => { this.oneAction() }, 1000)\r\n    }\r\n\r\n    \r\n    drawLine(color, subStyle, context, x, y) {\r\n        context.strokeStyle = color\r\n        context.beginPath();\r\n        context.moveTo(this.props.styles.lines.subStyles[subStyle].x, this.props.styles.lines.subStyles[subStyle].y)\r\n        context.lineTo(x, y);\r\n        context.stroke();\r\n    }\r\n\r\n    drawTriangle(color, subStyle, context, x, y) {\r\n        context.beginPath();\r\n        context.moveTo(x, y);\r\n        context.lineTo(random(this.refs[this.props.botId].width), random(this.refs[this.props.botId].height));\r\n        context.lineTo(random(this.refs[this.props.botId].width), random(this.refs[this.props.botId].height));\r\n        context.lineTo(x, y);\r\n        if (subStyle === \"simple\") {\r\n            context.strokeStyle = color\r\n            context.stroke()\r\n        }\r\n        else if (subStyle === \"filled\") {\r\n            context.fillStyle = color\r\n            context.fill()\r\n        }\r\n    }\r\n\r\n    drawSquare(color, subStyle, context, x, y) {\r\n        if (subStyle === \"simple\") {\r\n            context.strokeStyle = color\r\n            context.strokeRect(x, y, 75, 75)\r\n        }\r\n        else if (subStyle === \"filled\") {\r\n            context.fillStyle = color\r\n            context.fillRect(x, y, 75, 75)\r\n        }\r\n    }\r\n\r\n    drawRectangle(color, subStyle, context, x, y) {\r\n        if (subStyle === \"simple\") {\r\n            context.strokeStyle = color\r\n            context.strokeRect(x, y, 150, 75)\r\n        }\r\n        else if (subStyle === \"filled\") {\r\n            context.fillStyle = color\r\n            context.fillRect(x, y, 150, 75)\r\n        }\r\n    }\r\n\r\n    drawPoints4(color, subStyle, context, x, y) {\r\n        this.drawPoints(4, context, x, y)\r\n        if (subStyle === \"simple\") {\r\n            context.strokeStyle = color\r\n            context.stroke()\r\n        }\r\n        else if (subStyle === \"filled\") {\r\n            context.fillStyle = color\r\n            context.fill()\r\n        }\r\n    }\r\n\r\n    drawPoints5(color, subStyle, context, x, y) {\r\n        this.drawPoints(5, context, x, y)\r\n        if (subStyle === \"simple\") {\r\n            context.strokeStyle = color\r\n            context.stroke()\r\n        }\r\n        else if (subStyle === \"filled\") {\r\n            context.fillStyle = color\r\n            context.fill()\r\n        }\r\n    }\r\n\r\n    drawPoints(number, context, x, y) {\r\n        context.beginPath();\r\n        context.moveTo(x, y);\r\n        for (let i = 0; i < number; i++) { context.lineTo(random(this.refs[this.props.botId].width), random(this.refs[this.props.botId].height)); }\r\n        context.lineTo(x, y);\r\n    }\r\n\r\n    drawCircle(color, subStyle, context, x, y) {\r\n        context.beginPath();\r\n        context.arc(x, y, 40, 0, 2 * Math.PI);\r\n        if (subStyle === \"simple\") {\r\n            context.strokeStyle = color\r\n            context.stroke()\r\n        }\r\n        else if (subStyle === \"filled\") {\r\n            context.fillStyle = color\r\n            context.fill()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <canvas className=\"bot\" ref={this.props.botId} width=\"500\" height=\"500\" onClick={() => this.handleOnClickBot()} />\r\n            <input type=\"button\" value=\"Clear\" onClick={() => this.handleClear()}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BarkingBot\r\n\r\nfunction random(range) {\r\n    let randomNumber = (Math.floor(Math.random() * range))\r\n    return randomNumber\r\n}\r\n","import React from \"react\"\r\nimport BuyStyle from \"./BuyStyle\"\r\nimport BuyColor from \"./BuyColor\"\r\nimport StyleSelector from \"./StyleSelector\"\r\nimport SubStyleSelector from \"./SubStyleSelector\"\r\nimport BarkingBot from \"./BarkingBot\"\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            currentStyleSelector: \"lines\",\r\n            currentColorSelector: \"#000000\",\r\n            currentRepeaterSelector: 1,\r\n            currentCoins: 10000,\r\n            bots: [],\r\n            botsBought: 0,\r\n            colorroulette: true,\r\n            styleroulette: true,\r\n            colors: {\r\n                \"#000000\": true,\r\n            },\r\n            repeater: 1,\r\n            shop: {\r\n                bot: 100,\r\n                color: 5,\r\n                lines: 10,\r\n                triangles: 10,\r\n                squares: 10,\r\n                rectangles: 10,\r\n                points4: 10,\r\n                points5: 10,\r\n                circles: 10,\r\n                filled: 100,\r\n                repeater: 100,\r\n                randomColor: 5,\r\n            },\r\n\r\n            styles: {\r\n                lines: {\r\n                    currentSubStyleSelector: \"upperleft\",\r\n                    bought: true,\r\n                    subStyles: {\r\n                        upperleft: {\r\n                            bought: true,\r\n                            x: 0,\r\n                            y: 0,\r\n                        },\r\n                        upperright: {\r\n                            bought: true,\r\n                            x: this.props.canvas.width,\r\n                            y: 0,\r\n                        },\r\n                        bottomleft: {\r\n                            bought: true,\r\n                            x: 0,\r\n                            y: this.props.canvas.height,\r\n                        },\r\n                        bottomright: {\r\n                            bought: true,\r\n                            x: this.props.canvas.width,\r\n                            y: this.props.canvas.height,\r\n                        },\r\n                    },\r\n                },\r\n                triangles: {\r\n                    currentSubStyleSelector: \"simple\",\r\n                    bought: false,\r\n                    subStyles: {\r\n                        simple: {\r\n                            bought: true\r\n                        },\r\n                        filled: {\r\n                            bought: false\r\n                        },\r\n                    }\r\n                },\r\n                squares: {\r\n                    currentSubStyleSelector: \"simple\",\r\n                    bought: false,\r\n                    subStyles: {\r\n                        simple: {\r\n                            bought: true\r\n                        },\r\n                        filled: {\r\n                            bought: false\r\n                        },\r\n                    }\r\n                },\r\n                rectangles: {\r\n                    currentSubStyleSelector: \"simple\",\r\n                    bought: false,\r\n                    subStyles: {\r\n                        simple: {\r\n                            bought: true\r\n                        },\r\n                        filled: {\r\n                            bought: false\r\n                        },\r\n                    }\r\n                },\r\n                points4: {\r\n                    currentSubStyleSelector: \"simple\",\r\n                    bought: false,\r\n                    subStyles: {\r\n                        simple: {\r\n                            bought: true\r\n                        },\r\n                        filled: {\r\n                            bought: false\r\n                        },\r\n                    },\r\n                },\r\n                points5: {\r\n                    currentSubStyleSelector: \"simple\",\r\n                    bought: false,\r\n                    subStyles: {\r\n                        simple: {\r\n                            bought: true\r\n                        },\r\n                        filled: {\r\n                            bought: false\r\n                        },\r\n                    },\r\n                },\r\n                circles: {\r\n                    currentSubStyleSelector: \"simple\",\r\n                    bought: false,\r\n                    subStyles: {\r\n                        simple: {\r\n                            bought: true\r\n                        },\r\n                        filled: {\r\n                            bought: false\r\n                        }\r\n                    }\r\n                },\r\n            },\r\n        }\r\n        this.buy = this.buy.bind(this)\r\n        this.draw = this.draw.bind(this)\r\n        this.clear = this.clear.bind(this)\r\n        this.drawLine = this.drawLine.bind(this)\r\n        this.drawTriangle = this.drawTriangle.bind(this)\r\n        this.drawSquare = this.drawSquare.bind(this)\r\n        this.drawRectangle = this.drawRectangle.bind(this)\r\n        this.drawPoints = this.drawPoints.bind(this)\r\n        this.drawPoints4 = this.drawPoints4.bind(this)\r\n        this.drawPoints5 = this.drawPoints5.bind(this)\r\n        this.drawCircle = this.drawCircle.bind(this)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"App\">\r\n                <h1 className=\"add-shadow\">🐶 Barking Board 🐕</h1>\r\n                <div id=\"main-screen\">\r\n                    <div className=\"add-shadow board\">\r\n                        <canvas\r\n                            ref=\"canvas\"\r\n                            width={this.props.canvas.width}\r\n                            height={this.props.canvas.height}\r\n                            onClick={() => this.draw(this.state.currentRepeaterSelector)}>\r\n                        </canvas>\r\n                        <div className=\"controls\">\r\n                            <input\r\n                                ref=\"timesselector\"\r\n                                type=\"number\"\r\n                                defaultValue={this.currentRepeaterSelector}\r\n                                onChange={() => this.handleOnChangeTimesSelector()}>\r\n                            </input>\r\n                            <input type=\"button\" value=\"clear\" onClick={this.clear} />\r\n                            <a>Random style: </a>\r\n                            <input\r\n                                ref=\"styleroulette\"\r\n                                type=\"checkbox\"\r\n                                checked={this.state.styleroulette}\r\n                                onChange={() => this.handleOnChangeStyleRoulette()} />\r\n                            <a>Random color: </a>\r\n                            <input\r\n                                ref=\"colorroulette\"\r\n                                type=\"checkbox\"\r\n                                checked={this.state.colorroulette}\r\n                                onChange={() => this.handleOnChangeColorRoulette()} />\r\n                            <StyleSelector\r\n                                ref=\"styleselector\"\r\n                                styles={this.state.styles}\r\n                                onChange={() => this.handleOnChangeStyleSelector()} />\r\n                            <SubStyleSelector\r\n                                ref=\"substyleselector\"\r\n                                styles={this.state.styles}\r\n                                onChange={() => this.handleOnChangeSubStyleSelector()}\r\n                                currentStyleSelector={this.state.currentStyleSelector} />\r\n\r\n                            <select ref=\"colorselector\" onChange={this.handleOnChangeColorSelector}>\r\n                                {Object.keys(this.state.colors).map((x) => <option\r\n                                    key={x}\r\n                                    value={x}\r\n                                    style={{ backgroundColor: x }}>\r\n                                    {x}\r\n                                </option>)}\r\n                            </select>`\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"add-shadow store\">\r\n                        <div className=\"coins\">Coins: {this.state.currentCoins}</div>\r\n                        <BuyStyle styles={this.state.styles} onClick={this.buy} />\r\n                        <BuyColor ref=\"color\" onClick={this.buy} />\r\n                    </div>\r\n                    {this.state.botsBought > 0 &&\r\n                        <div>{this.state.bots.map((key) => {\r\n                            return <div className=\"add-shadow board\"><BarkingBot botId={`bot${key}`} colors={this.state.colors} styles={this.state.styles} botsBought={this.state.botsBought} onClick={() => this.handleOnClickBot()} /></div>\r\n                        })}</div>\r\n                    }\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n\r\n    handleOnChangeTimesSelector() {\r\n        if (this.refs.timesselector.value > this.state.repeater) { this.refs.timesselector.value = this.state.repeater }\r\n        this.setState({ currentRepeaterSelector: this.refs.timesselector.value })\r\n    }\r\n\r\n    handleOnChangeStyleSelector() {\r\n        this.setState({ currentStyleSelector: this.refs.styleselector.value, })\r\n    }\r\n\r\n    handleOnChangeSubStyleSelector() {\r\n        let mainStyle = this.refs.styleselector.value\r\n        this.setState((prevState) => ({\r\n            styles: {\r\n                ...prevState.styles,\r\n                [mainStyle]: {\r\n                    ...prevState.styles[mainStyle],\r\n                    currentSubStyleSelector: this.refs.substyleselector.value\r\n                }\r\n            }\r\n        }))\r\n    }\r\n\r\n    handleOnChangeColorSelector() {\r\n        this.setState({ currentColorSelector: this.refs.colorselector.value })\r\n    }\r\n\r\n    handleOnChangeStyleRoulette() {\r\n        this.setState((state) => state.styleroulette = !state.styleroulette)\r\n    }\r\n    handleOnChangeColorRoulette() {\r\n        this.setState((state) => state.colorroulette = !state.colorroulette)\r\n    }\r\n\r\n    buy(event) {\r\n        let item = event.target.attributes.buy.nodeValue\r\n\r\n        if (this.state.currentCoins < this.state.shop[item]) {\r\n            alert(\"You don't have enough borkCoins, BORK\")\r\n        }\r\n        else {\r\n            if (item === \"color\") {\r\n                let colorBought = this.refs.color.value\r\n                this.setState((state) => (state.currentCoins = state.currentCoins - state.shop.color))\r\n                this.setState((prevState => ({\r\n                    colors: {\r\n                        ...prevState.colors,\r\n                        [colorBought]: true,\r\n                    }\r\n                })))\r\n            }\r\n            else if (item === \"random-color\") {\r\n                let r = rgbToHex(random(256))\r\n                let g = rgbToHex(random(256))\r\n                let b = rgbToHex(random(256))\r\n                let colorBought = `#${r}${g}${b}`\r\n                this.setState((state) => (state.currentCoins = state.currentCoins - state.shop.randomColor))\r\n                this.setState((prevState => ({\r\n                    colors: {\r\n                        ...prevState.colors,\r\n                        [colorBought]: true,\r\n                    }\r\n                })))\r\n\r\n            }\r\n            else if (item === \"filled\") {\r\n                let styleFamily = event.target.attributes.styleFamily.nodeValue\r\n                this.setState((state) => (state.currentCoins = state.currentCoins - state.shop[item]))\r\n                this.setState((prevState) => ({\r\n                    styles: {\r\n                        ...prevState.styles,\r\n                        [styleFamily]: {\r\n                            ...prevState.styles[styleFamily],\r\n                            subStyles: {\r\n                                ...prevState.styles[styleFamily].subStyles,\r\n                                [item]: {\r\n                                    ...prevState.styles[styleFamily].subStyles[item],\r\n                                    bought: true\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }))\r\n            }\r\n            else if (item === \"repeater\") {\r\n                this.setState((state) => (state.currentCoins = state.currentCoins - state.shop.repeater))\r\n                this.setState((state) => (state.repeater++))\r\n            }\r\n            else if (item === \"bot\") {\r\n                this.setState((state) => (state.currentCoins = state.currentCoins - state.shop.bot))\r\n                this.setState((state) => (state.botsBought++))\r\n                let bots = this.state.bots\r\n                bots.push(bots.length)\r\n                this.setState({ bots: bots })\r\n            }\r\n            else {\r\n                this.setState((state) => (state.currentCoins = state.currentCoins - state.shop[item]))\r\n                this.setState((prevState) => ({\r\n                    styles: {\r\n                        ...prevState.styles,\r\n                        [item]: {\r\n                            ...prevState.styles[item],\r\n                            bought: true\r\n                        }\r\n                    }\r\n                }))\r\n            }\r\n        }\r\n    }\r\n\r\n    draw(times) {\r\n        let chosenColor = this.state.currentColorSelector\r\n        let chosenStyle = this.state.currentStyleSelector\r\n        let chosenSubStyle = this.state.styles[chosenStyle].currentSubStyleSelector\r\n        let ctx = this.refs.canvas.getContext(\"2d\")\r\n        let drawingFunctions = {\r\n            \"lines\": this.drawLine,\r\n            \"triangles\": this.drawTriangle,\r\n            \"squares\": this.drawSquare,\r\n            \"rectangles\": this.drawRectangle,\r\n            \"points4\": this.drawPoints4,\r\n            \"points5\": this.drawPoints5,\r\n            \"circles\": this.drawCircle,\r\n        }\r\n        for (let i = 0; i < times; i++) {\r\n            this.setState((state) => state.currentCoins++)\r\n            if (this.state.colorroulette === true) {\r\n                let colorArray = Object.keys(this.state.colors)\r\n                let randomIndex = Math.floor(Math.random() * colorArray.length)\r\n                chosenColor = colorArray[randomIndex]\r\n            }\r\n\r\n            if (this.state.styleroulette === true) {\r\n                let styleArray = Object.keys(this.state.styles)\r\n                let boughtStyles = []\r\n                styleArray.map((x) => {\r\n                    if (this.state.styles[x].bought === true) { boughtStyles.push(x) }\r\n                })\r\n                let randomIndex = Math.floor(Math.random() * boughtStyles.length)\r\n                chosenStyle = boughtStyles[randomIndex]\r\n\r\n                let subStyleArray = Object.keys(this.state.styles[chosenStyle].subStyles)\r\n                let boughtSubStyles = []\r\n                subStyleArray.map((x) => {\r\n                    if (this.state.styles[chosenStyle].bought === true) { boughtSubStyles.push(x) }\r\n                })\r\n                let anotherRandomIndex = Math.floor(Math.random() * boughtSubStyles.length)\r\n                chosenSubStyle = boughtSubStyles[anotherRandomIndex]\r\n            }\r\n            drawingFunctions[chosenStyle](chosenColor, chosenSubStyle, ctx, random(this.props.canvas.width), random(this.props.canvas.height))\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        let ctx = this.refs.canvas.getContext(\"2d\")\r\n        ctx.clearRect(0, 0, this.props.canvas.width, this.props.canvas.height);\r\n    }\r\n\r\n    drawLine(color, subStyle, context, x, y) {\r\n        context.strokeStyle = color\r\n        context.beginPath();\r\n        context.moveTo(this.state.styles.lines.subStyles[subStyle].x, this.state.styles.lines.subStyles[subStyle].y)\r\n        context.lineTo(x, y);\r\n        context.stroke();\r\n    }\r\n\r\n    drawTriangle(color, subStyle, context, x, y) {\r\n        context.beginPath();\r\n        context.moveTo(x, y);\r\n        context.lineTo(random(this.props.canvas.width), random(this.props.canvas.height));\r\n        context.lineTo(random(this.props.canvas.width), random(this.props.canvas.height));\r\n        context.lineTo(x, y);\r\n        if (subStyle === \"simple\") {\r\n            context.strokeStyle = color\r\n            context.stroke()\r\n        }\r\n        else if (subStyle === \"filled\") {\r\n            context.fillStyle = color\r\n            context.fill()\r\n        }\r\n    }\r\n\r\n    drawSquare(color, subStyle, context, x, y) {\r\n        if (subStyle === \"simple\") {\r\n            context.strokeStyle = color\r\n            context.strokeRect(x, y, 75, 75)\r\n        }\r\n        else if (subStyle === \"filled\") {\r\n            context.fillStyle = color\r\n            context.fillRect(x, y, 75, 75)\r\n        }\r\n    }\r\n\r\n    drawRectangle(color, subStyle, context, x, y) {\r\n        if (subStyle === \"simple\") {\r\n            context.strokeStyle = color\r\n            context.strokeRect(x, y, 150, 75)\r\n        }\r\n        else if (subStyle === \"filled\") {\r\n            context.fillStyle = color\r\n            context.fillRect(x, y, 150, 75)\r\n        }\r\n    }\r\n\r\n    drawPoints(number, context, x, y) {\r\n        context.beginPath();\r\n        context.moveTo(x, y);\r\n        for (let i = 0; i < number; i++) { context.lineTo(random(this.props.canvas.width), random(this.props.canvas.height)); }\r\n        context.lineTo(x, y);\r\n    }\r\n\r\n    drawPoints4(color, subStyle, context, x, y) {\r\n        this.drawPoints(4, context, x, y)\r\n        if (subStyle === \"simple\") {\r\n            context.strokeStyle = color\r\n            context.stroke()\r\n        }\r\n        else if (subStyle === \"filled\") {\r\n            context.fillStyle = color\r\n            context.fill()\r\n        }\r\n    }\r\n\r\n    drawPoints5(color, subStyle, context, x, y) {\r\n        this.drawPoints(5, context, x, y)\r\n        if (subStyle === \"simple\") {\r\n            context.strokeStyle = color\r\n            context.stroke()\r\n        }\r\n        else if (subStyle === \"filled\") {\r\n            context.fillStyle = color\r\n            context.fill()\r\n        }\r\n    }\r\n\r\n    drawCircle(color, subStyle, context, x, y) {\r\n        context.beginPath();\r\n        context.arc(x, y, 40, 0, 2 * Math.PI);\r\n        if (subStyle === \"simple\") {\r\n            context.strokeStyle = color\r\n            context.stroke()\r\n        }\r\n        else if (subStyle === \"filled\") {\r\n            context.fillStyle = color\r\n            context.fill()\r\n        }\r\n    }\r\n}\r\n\r\nfunction random(range) {\r\n    let randomNumber = (Math.floor(Math.random() * range))\r\n    return randomNumber\r\n}\r\n\r\nfunction rgbToHex(number) {\r\n    var hex = Number(number).toString(16);\r\n    if (hex.length < 2) {\r\n        hex = \"0\" + hex;\r\n    }\r\n    return hex;\r\n};\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport \"./index.css\"\r\n\r\nclass Index extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            canvas: {\r\n                width: 800,\r\n                height: 500,\r\n            }\r\n        }\r\n    }\r\n    render(){\r\n        return <App canvas={this.state.canvas}/>\r\n    }\r\n}\r\nReactDOM.render(<Index />, document.getElementById(\"root\")) "],"sourceRoot":""}