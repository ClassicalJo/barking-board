{"version":3,"sources":["BuyStyle.js","BuyColor.js","StyleSelector.js","SubStyleSelector.js","BarkingBot.js","App.js","index.js"],"names":["BuyStyle","stylesKeys","Object","keys","this","props","styles","shift","mappedStylesKeys","map","key","bought","className","x","onClick","buy","disabled","subStyles","filled","stylefamily","role","aria-label","React","Component","BuyColor","type","ref","innerRef","value","forwardRef","StyleSelector","onChange","SubStyleSelector","subStyle","currentStyleSelector","currentSubStyleSelector","triangles","simple","squares","rectangles","points4","points5","circles","BarkingBot","state","paused","checkedStyles","lines","available","upperleft","upperright","bottomleft","bottomright","oneAction","bind","drawLine","drawTriangle","drawPoints4","drawPoints5","handleClear","handleOnClickBot","handleOnChangeCheckbox","setState","refs","botId","getContext","clearRect","width","height","prevProps","stylesBought","forEach","push","prevState","otherKey","setInterval","ctx","length","randomStyleIndex","random","randomStyle","checkedSubstyles","randomSubStyleIndex","randomSubStyle","colorArray","colors","randomColor","drawSquare","drawRectangle","drawCircle","color","context","y","strokeStyle","beginPath","moveTo","lineTo","stroke","fillStyle","fill","strokeRect","fillRect","drawPoints","number","i","arc","Math","PI","event","clickedStyle","target","mainStyle","attributes","mainstyle","substyle","toggledValue","checked","anotherKey","range","floor","rgbToHex","hex","Number","toString","App","currentColorSelector","currentRepeaterSelector","currentCoins","bots","botsBought","colorroulette","styleroulette","repeater","shop","bot","canvas","draw","clear","id","defaultValue","handleOnChangeTimesSelector","handleOnChangeStyleRoulette","handleOnChangeColorRoulette","handleOnChangeStyleSelector","handleOnChangeSubStyleSelector","handleOnChangeColorSelector","style","backgroundColor","timesselector","styleselector","substyleselector","colorselector","item","nodeValue","alert","colorBought","r","g","b","styleFamily","times","drawingFunctions","chosenColor","chosenStyle","chosenSubStyle","styleArray","boughtStyles","randomIndex","subStyleArray","boughtSubStyles","anotherRandomIndex","Index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4cc3ef7d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass BuyStyle extends React.Component {\r\n    render() {\r\n        let stylesKeys = Object.keys(this.props.styles)\r\n        stylesKeys.shift()\r\n        let mappedStylesKeys = stylesKeys.map((key) => { return [key, this.props.styles[key].bought] })\r\n\r\n        return (\r\n            <div>\r\n                <ul className=\"buy-styles\"> {stylesKeys.map((x) => !this.props.styles[x].bought && <li\r\n                    key={x}\r\n                    onClick={this.props.onClick}\r\n                    buy={x}\r\n                    disabled={this.props.styles[x].bought}>\r\n                    Buy {x} for 10 borkCoins!</li>)}\r\n                </ul>\r\n                <div className=\"style\">\r\n                    {mappedStylesKeys.map((x) => x[1] === true && !this.props.styles[x[0]].subStyles.filled.bought &&\r\n                        <p\r\n                            key={x}\r\n                            onClick={this.props.onClick}\r\n                            buy=\"filled\"\r\n                            stylefamily={x[0]}\r\n                        ><span role=\"img\" aria-label=\"money\">💰</span> and buy filled {x[0]} for 100 borkcoins!</p>)}\r\n                </div>\r\n\r\n                <div className=\"style\"\r\n                    onClick={this.props.onClick}\r\n                    buy=\"repeater\">Buy a repeater for 100 coins!</div>\r\n                <div className=\"style\"\r\n                    onClick={this.props.onClick}\r\n                    buy=\"bot\">Buy a bot for 100 coins!</div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\nexport default BuyStyle","import React from 'react'\r\n\r\nclass BuyColor extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"buy-color\">\r\n                <p>Buy a color for 5 borkcoins</p>\r\n                <input\r\n                    type=\"color\"\r\n                    ref={this.props.innerRef} />\r\n                <input\r\n                    buy='color'\r\n                    type=\"button\"\r\n                    value=\"Buy color\"\r\n                    onClick={this.props.onClick} />\r\n                <input\r\n                    buy=\"random-color\"\r\n                    type=\"button\"\r\n                    value=\"@\"\r\n                    onClick={this.props.onClick} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default React.forwardRef((props, ref) => <BuyColor\r\n    innerRef={ref} {...props} />);","import React from 'react'\r\n\r\nclass StyleSelector extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <select ref={this.props.innerRef} onChange={this.props.onChange}>\r\n                    {Object.keys(this.props.styles).map((x) =>\r\n                        <option\r\n                            disabled={!this.props.styles[x].bought}\r\n                            key={x}\r\n                            value={x}>\r\n                            {x}\r\n                        </option>)}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default React.forwardRef((props, ref) => <StyleSelector\r\n    innerRef={ref} {...props}\r\n/>);","import React from 'react'\r\n\r\nclass SubStyleSelector extends React.Component {\r\n    render() {\r\n        \r\n        let subStyle = this.props.styles[this.props.currentStyleSelector].currentSubStyleSelector\r\n        if (this.props.currentStyleSelector === \"lines\") {\r\n            return (\r\n                <select ref={this.props.innerRef} onChange={this.props.onChange} value={subStyle}>\r\n                    <option value=\"upperleft\">Upper left corner</option>\r\n                    <option value=\"upperright\">Upper right corner</option>\r\n                    <option value=\"bottomleft\">Bottom left corner</option>\r\n                    <option value=\"bottomright\">Bottom right corner</option>\r\n                </select>\r\n            )\r\n        }\r\n        else if (this.props.currentStyleSelector === \"triangles\") {\r\n            return (\r\n                <select ref={this.props.innerRef} onChange={this.props.onChange} value={subStyle}>\r\n                    <option value=\"simple\" disabled={!this.props.styles.triangles.subStyles.simple.bought}>Simple triangles</option>\r\n                    <option value=\"filled\" disabled={!this.props.styles.triangles.subStyles.filled.bought}>Filled triangles</option>\r\n                </select>\r\n            )\r\n        }\r\n        else if (this.props.currentStyleSelector === \"squares\") {\r\n            return (\r\n                <select ref={this.props.innerRef} onChange={this.props.onChange} value={subStyle}>\r\n                    <option value=\"simple\" disabled={!this.props.styles.squares.subStyles.simple.bought}>Simple square</option>\r\n                    <option value=\"filled\" disabled={!this.props.styles.squares.subStyles.filled.bought}>Filled square</option>\r\n                </select>\r\n            )\r\n        }\r\n        else if (this.props.currentStyleSelector === \"rectangles\") {\r\n            return (\r\n                <select ref={this.props.innerRef} onChange={this.props.onChange} value={subStyle}>\r\n                    <option value=\"simple\" disabled={!this.props.styles.rectangles.subStyles.simple.bought}>Simple rectangle</option>\r\n                    <option value=\"filled\" disabled={!this.props.styles.rectangles.subStyles.filled.bought}>Filled rectangle</option>\r\n                </select>\r\n            )\r\n        }\r\n        else if (this.props.currentStyleSelector === \"points4\") {\r\n            return (\r\n                <select ref={this.props.innerRef} onChange={this.props.onChange} value={subStyle}>\r\n                    <option value=\"simple\" disabled={!this.props.styles.points4.subStyles.simple.bought}>Simple 4 points</option>\r\n                    <option value=\"filled\" disabled={!this.props.styles.points4.subStyles.filled.bought}>Filled 4 points</option>\r\n                </select>\r\n            )\r\n        }\r\n        else if (this.props.currentStyleSelector === \"points5\") {\r\n            return (\r\n                <select ref={this.props.innerRef} onChange={this.props.onChange} value={subStyle}>\r\n                    <option value=\"simple\" disabled={!this.props.styles.points5.subStyles.simple.bought}>Simple 5 points</option>\r\n                    <option value=\"filled\" disabled={!this.props.styles.points5.subStyles.filled.bought}>Filled 5 points</option>\r\n                </select>\r\n            )\r\n        }\r\n        else if (this.props.currentStyleSelector === \"circles\") {\r\n            return (\r\n                <select ref={this.props.innerRef} onChange={this.props.onChange} value={subStyle}>\r\n                    <option value=\"simple\" disabled={!this.props.styles.circles.subStyles.simple.bought}>Simple circle</option>\r\n                    <option value=\"filled\" disabled={!this.props.styles.circles.subStyles.filled.bought}>Filled circle</option>\r\n                </select>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default React.forwardRef((props, ref) => <SubStyleSelector\r\n    innerRef={ref} {...props} />);","import React from 'react'\r\n\r\nclass BarkingBot extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            paused: false,\r\n            checkedStyles: {\r\n                lines: {\r\n                    available: true,\r\n                    subStyles: {\r\n                        upperleft: true,\r\n                        upperright: true,\r\n                        bottomleft: true,\r\n                        bottomright: true\r\n                    }\r\n                },\r\n                triangles: {\r\n                    available: false,\r\n                    subStyles: {\r\n                        simple: false,\r\n                        filled: false\r\n                    }\r\n                },\r\n                squares: {\r\n                    available: false,\r\n                    subStyles: {\r\n                        simple: false,\r\n                        filled: false\r\n                    }\r\n                },\r\n                rectangles: {\r\n                    available: false,\r\n                    subStyles: {\r\n                        simple: false,\r\n                        filled: false\r\n                    }\r\n                },\r\n                points4: {\r\n                    available: false,\r\n                    subStyles: {\r\n                        simple: false,\r\n                        filled: false\r\n                    }\r\n                },\r\n                points5: {\r\n                    available: false,\r\n                    subStyles: {\r\n                        simple: false,\r\n                        filled: false\r\n                    }\r\n                },\r\n                circles: {\r\n                    available: false,\r\n                    subStyles: {\r\n                        simple: false,\r\n                        filled: false\r\n                    }\r\n                },\r\n            }\r\n        }\r\n        this.oneAction = this.oneAction.bind(this)\r\n        this.drawLine = this.drawLine.bind(this)\r\n        this.drawTriangle = this.drawTriangle.bind(this)\r\n        this.drawPoints4 = this.drawPoints4.bind(this)\r\n        this.drawPoints5 = this.drawPoints5.bind(this)\r\n        this.handleClear = this.handleClear.bind(this)\r\n        this.handleOnClickBot = this.handleOnClickBot.bind(this)\r\n        this.handleOnChangeCheckbox = this.handleOnChangeCheckbox.bind(this)\r\n    }\r\n\r\n    handleOnClickBot() {\r\n        this.setState((state) => ({ paused: !state.paused }))\r\n    }\r\n\r\n    handleClear() {\r\n        let ctx = this.refs[this.props.botId].getContext(\"2d\")\r\n        ctx.clearRect(0, 0, this.refs[this.props.botId].width, this.refs[this.props.botId].height);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.styles !== this.props.styles) {\r\n            let stylesBought = []\r\n            Object.keys(this.props.styles).forEach((key) => { if (this.props.styles[key].bought === true) { stylesBought.push(key) } })\r\n            stylesBought.forEach((key) => {\r\n                this.setState((prevState) => ({\r\n                    checkedStyles: {\r\n                        ...prevState.checkedStyles,\r\n                        [key]: {\r\n                            ...prevState.checkedStyles[key],\r\n                            available: true\r\n                        }\r\n\r\n                    }\r\n                }))\r\n\r\n                let subStylesOf = Object.keys(this.props.styles[key].subStyles)\r\n                subStylesOf.forEach((otherKey) => {\r\n                    if (this.props.styles[key].subStyles[otherKey].bought === true) {\r\n                        this.setState((prevState) => ({\r\n                            checkedStyles: {\r\n                                ...prevState.checkedStyles,\r\n                                [key]: {\r\n                                    ...prevState.checkedStyles[key],\r\n                                    subStyles: {\r\n                                        ...prevState.checkedStyles[key].subStyles,\r\n                                        [otherKey]: true\r\n                                    }\r\n                                }\r\n\r\n                            }\r\n                        }))\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        setInterval(() => { this.oneAction() }, 1000)\r\n    }\r\n\r\n    oneAction() {\r\n        if (this.state.paused === true) { return \"\" }\r\n        else {\r\n            let botId = this.props.botId\r\n            let ctx = this.refs[botId].getContext(\"2d\")\r\n\r\n            let checkedStyles = []\r\n            Object.keys(this.state.checkedStyles).forEach((key) => { if (this.state.checkedStyles[key].available === true) { checkedStyles.push(key) } })\r\n            if (checkedStyles.length === 0) { return }\r\n            let randomStyleIndex = random(checkedStyles.length)\r\n            let randomStyle = checkedStyles[randomStyleIndex]\r\n\r\n            let checkedSubstyles = []\r\n            Object.keys(this.state.checkedStyles[randomStyle].subStyles).forEach((key) => { if (this.state.checkedStyles[randomStyle].subStyles[key] === true) { checkedSubstyles.push(key) } })\r\n            if (checkedSubstyles.length === 0) { return }\r\n            let randomSubStyleIndex = random(checkedSubstyles.length)\r\n            let randomSubStyle = checkedSubstyles[randomSubStyleIndex]\r\n\r\n            let colorArray = Object.keys(this.props.colors)\r\n            let randomColorIndex = random(colorArray.length)\r\n            let randomColor = colorArray[randomColorIndex]\r\n\r\n            let drawingFunctions = {\r\n                \"lines\": this.drawLine,\r\n                \"triangles\": this.drawTriangle,\r\n                \"squares\": this.drawSquare,\r\n                \"rectangles\": this.drawRectangle,\r\n                \"points4\": this.drawPoints4,\r\n                \"points5\": this.drawPoints5,\r\n                \"circles\": this.drawCircle,\r\n            }\r\n            drawingFunctions[randomStyle](randomColor, randomSubStyle, ctx, random(this.refs[botId].width), random(this.refs[botId].height))\r\n        }\r\n\r\n    }\r\n\r\n    drawLine(color, subStyle, context, x, y) {\r\n        context.strokeStyle = color\r\n        context.beginPath();\r\n        context.moveTo(this.props.styles.lines.subStyles[subStyle].x, this.props.styles.lines.subStyles[subStyle].y)\r\n        context.lineTo(x, y);\r\n        context.stroke();\r\n    }\r\n\r\n    drawTriangle(color, subStyle, context, x, y) {\r\n        context.beginPath();\r\n        context.moveTo(x, y);\r\n        context.lineTo(random(this.refs[this.props.botId].width), random(this.refs[this.props.botId].height));\r\n        context.lineTo(random(this.refs[this.props.botId].width), random(this.refs[this.props.botId].height));\r\n        context.lineTo(x, y);\r\n        if (subStyle === \"simple\") {\r\n            context.strokeStyle = color\r\n            context.stroke()\r\n        }\r\n        else if (subStyle === \"filled\") {\r\n            context.fillStyle = color\r\n            context.fill()\r\n        }\r\n    }\r\n\r\n    drawSquare(color, subStyle, context, x, y) {\r\n        if (subStyle === \"simple\") {\r\n            context.strokeStyle = color\r\n            context.strokeRect(x, y, 75, 75)\r\n        }\r\n        else if (subStyle === \"filled\") {\r\n            context.fillStyle = color\r\n            context.fillRect(x, y, 75, 75)\r\n        }\r\n    }\r\n\r\n    drawRectangle(color, subStyle, context, x, y) {\r\n        if (subStyle === \"simple\") {\r\n            context.strokeStyle = color\r\n            context.strokeRect(x, y, 150, 75)\r\n        }\r\n        else if (subStyle === \"filled\") {\r\n            context.fillStyle = color\r\n            context.fillRect(x, y, 150, 75)\r\n        }\r\n    }\r\n\r\n    drawPoints4(color, subStyle, context, x, y) {\r\n        this.drawPoints(4, context, x, y)\r\n        if (subStyle === \"simple\") {\r\n            context.strokeStyle = color\r\n            context.stroke()\r\n        }\r\n        else if (subStyle === \"filled\") {\r\n            context.fillStyle = color\r\n            context.fill()\r\n        }\r\n    }\r\n\r\n    drawPoints5(color, subStyle, context, x, y) {\r\n        this.drawPoints(5, context, x, y)\r\n        if (subStyle === \"simple\") {\r\n            context.strokeStyle = color\r\n            context.stroke()\r\n        }\r\n        else if (subStyle === \"filled\") {\r\n            context.fillStyle = color\r\n            context.fill()\r\n        }\r\n    }\r\n\r\n    drawPoints(number, context, x, y) {\r\n        context.beginPath();\r\n        context.moveTo(x, y);\r\n        for (let i = 0; i < number; i++) { context.lineTo(random(this.refs[this.props.botId].width), random(this.refs[this.props.botId].height)); }\r\n        context.lineTo(x, y);\r\n    }\r\n\r\n    drawCircle(color, subStyle, context, x, y) {\r\n        context.beginPath();\r\n        context.arc(x, y, 40, 0, 2 * Math.PI);\r\n        if (subStyle === \"simple\") {\r\n            context.strokeStyle = color\r\n            context.stroke()\r\n        }\r\n        else if (subStyle === \"filled\") {\r\n            context.fillStyle = color\r\n            context.fill()\r\n        }\r\n    }\r\n\r\n    handleOnChangeCheckbox(event) {\r\n        let clickedStyle = event.target.value\r\n        if (clickedStyle === \"substyle\") {\r\n            let mainStyle = event.target.attributes.mainstyle.value\r\n            let subStyle = event.target.attributes.substyle.value\r\n            let toggledValue = !this.state.checkedStyles[mainStyle].subStyles[subStyle]\r\n            this.setState((prevState) => ({\r\n                checkedStyles: {\r\n                    ...prevState.checkedStyles,\r\n                    [mainStyle]: {\r\n                        ...prevState.checkedStyles[mainStyle],\r\n                        subStyles: {\r\n                            ...prevState.checkedStyles[mainStyle].subStyles,\r\n                            [subStyle]: toggledValue\r\n                        }\r\n                    }\r\n                }\r\n            }))\r\n\r\n        }\r\n\r\n        else {\r\n            let toggledValue = !this.state.checkedStyles[clickedStyle].available\r\n            this.setState((prevState) => ({\r\n                checkedStyles: {\r\n                    ...prevState.checkedStyles,\r\n                    [clickedStyle]: {\r\n                        ...prevState.checkedStyles[clickedStyle],\r\n                        available: toggledValue\r\n                    }\r\n                }\r\n            }));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <canvas className=\"bot\" ref={this.props.botId} width=\"500\" height=\"500\" onClick={() => this.handleOnClickBot()} />\r\n                <input type=\"button\" value=\"Clear\" onClick={() => this.handleClear()} />\r\n                <ul>{Object.keys(this.props.styles).forEach((key) => {\r\n                    if (this.props.styles[key].bought === true) {\r\n                        return <li>{key}\r\n                            <input type=\"checkbox\" checked={this.state.checkedStyles[key].available} value={key} onChange={this.handleOnChangeCheckbox} />\r\n                            {Object.keys(this.props.styles[key].subStyles).forEach((anotherKey) => {\r\n                                if (this.props.styles[key].subStyles[anotherKey].bought === true) {\r\n                                    return <li>{anotherKey} <input type=\"checkbox\" value=\"substyle\" mainstyle={key} substyle={anotherKey} disabled={!this.state.checkedStyles[key].available} checked={this.state.checkedStyles[key].subStyles[anotherKey]} onChange={this.handleOnChangeCheckbox} /></li>\r\n                                }\r\n                            })}\r\n                        </li>\r\n                    }\r\n                })}</ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BarkingBot\r\n\r\nfunction random(range) {\r\n    let randomNumber = (Math.floor(Math.random() * range))\r\n    return randomNumber\r\n}\r\n","import React from \"react\"\r\nimport BuyStyle from \"./BuyStyle\"\r\nimport BuyColor from \"./BuyColor\"\r\nimport StyleSelector from \"./StyleSelector\"\r\nimport SubStyleSelector from \"./SubStyleSelector\"\r\nimport BarkingBot from \"./BarkingBot\"\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            currentStyleSelector: \"lines\",\r\n            currentColorSelector: \"#000000\",\r\n            currentRepeaterSelector: 1,\r\n            currentCoins: 10000,\r\n            bots: [],\r\n            botsBought: 0,\r\n            colorroulette: true,\r\n            styleroulette: true,\r\n            colors: {\r\n                \"#000000\": true,\r\n            },\r\n            repeater: 1,\r\n            shop: {\r\n                bot: 100,\r\n                color: 5,\r\n                lines: 10,\r\n                triangles: 10,\r\n                squares: 10,\r\n                rectangles: 10,\r\n                points4: 10,\r\n                points5: 10,\r\n                circles: 10,\r\n                filled: 100,\r\n                repeater: 100,\r\n                randomColor: 5,\r\n            },\r\n\r\n            styles: {\r\n                lines: {\r\n                    currentSubStyleSelector: \"upperleft\",\r\n                    bought: true,\r\n                    subStyles: {\r\n                        upperleft: {\r\n                            bought: true,\r\n                            x: 0,\r\n                            y: 0,\r\n                        },\r\n                        upperright: {\r\n                            bought: true,\r\n                            x: this.props.canvas.width,\r\n                            y: 0,\r\n                        },\r\n                        bottomleft: {\r\n                            bought: true,\r\n                            x: 0,\r\n                            y: this.props.canvas.height,\r\n                        },\r\n                        bottomright: {\r\n                            bought: true,\r\n                            x: this.props.canvas.width,\r\n                            y: this.props.canvas.height,\r\n                        },\r\n                    },\r\n                },\r\n                triangles: {\r\n                    currentSubStyleSelector: \"simple\",\r\n                    bought: false,\r\n                    subStyles: {\r\n                        simple: {\r\n                            bought: true\r\n                        },\r\n                        filled: {\r\n                            bought: false\r\n                        },\r\n                    }\r\n                },\r\n                squares: {\r\n                    currentSubStyleSelector: \"simple\",\r\n                    bought: false,\r\n                    subStyles: {\r\n                        simple: {\r\n                            bought: true\r\n                        },\r\n                        filled: {\r\n                            bought: false\r\n                        },\r\n                    }\r\n                },\r\n                rectangles: {\r\n                    currentSubStyleSelector: \"simple\",\r\n                    bought: false,\r\n                    subStyles: {\r\n                        simple: {\r\n                            bought: true\r\n                        },\r\n                        filled: {\r\n                            bought: false\r\n                        },\r\n                    }\r\n                },\r\n                points4: {\r\n                    currentSubStyleSelector: \"simple\",\r\n                    bought: false,\r\n                    subStyles: {\r\n                        simple: {\r\n                            bought: true\r\n                        },\r\n                        filled: {\r\n                            bought: false\r\n                        },\r\n                    },\r\n                },\r\n                points5: {\r\n                    currentSubStyleSelector: \"simple\",\r\n                    bought: false,\r\n                    subStyles: {\r\n                        simple: {\r\n                            bought: true\r\n                        },\r\n                        filled: {\r\n                            bought: false\r\n                        },\r\n                    },\r\n                },\r\n                circles: {\r\n                    currentSubStyleSelector: \"simple\",\r\n                    bought: false,\r\n                    subStyles: {\r\n                        simple: {\r\n                            bought: true\r\n                        },\r\n                        filled: {\r\n                            bought: false\r\n                        }\r\n                    }\r\n                },\r\n            },\r\n        }\r\n        this.buy = this.buy.bind(this)\r\n        this.draw = this.draw.bind(this)\r\n        this.clear = this.clear.bind(this)\r\n        this.drawLine = this.drawLine.bind(this)\r\n        this.drawTriangle = this.drawTriangle.bind(this)\r\n        this.drawSquare = this.drawSquare.bind(this)\r\n        this.drawRectangle = this.drawRectangle.bind(this)\r\n        this.drawPoints = this.drawPoints.bind(this)\r\n        this.drawPoints4 = this.drawPoints4.bind(this)\r\n        this.drawPoints5 = this.drawPoints5.bind(this)\r\n        this.drawCircle = this.drawCircle.bind(this)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"App\">\r\n                <h1 className=\"add-shadow\"><span role=\"img\" aria-label=\"dog\">🐶</span> Barking Board <span role=\"img\" aria-label=\"another dog\">🐕</span></h1>\r\n                <div id=\"main-screen\">\r\n                    <div className=\"add-shadow board\">\r\n                        <canvas\r\n                            ref=\"canvas\"\r\n                            width={this.props.canvas.width}\r\n                            height={this.props.canvas.height}\r\n                            onClick={() => this.draw(this.state.currentRepeaterSelector)}>\r\n                        </canvas>\r\n                        <div className=\"controls\">\r\n                            <input\r\n                                ref=\"timesselector\"\r\n                                type=\"number\"\r\n                                defaultValue={this.currentRepeaterSelector}\r\n                                onChange={() => this.handleOnChangeTimesSelector()}>\r\n                            </input>\r\n                            <input type=\"button\" value=\"clear\" onClick={this.clear} />\r\n                            <p>Random style: </p>\r\n                            <input\r\n                                ref=\"styleroulette\"\r\n                                type=\"checkbox\"\r\n                                checked={this.state.styleroulette}\r\n                                onChange={() => this.handleOnChangeStyleRoulette()} />\r\n                            <p>Random color: </p>\r\n                            <input\r\n                                ref=\"colorroulette\"\r\n                                type=\"checkbox\"\r\n                                checked={this.state.colorroulette}\r\n                                onChange={() => this.handleOnChangeColorRoulette()} />\r\n                            <StyleSelector\r\n                                ref=\"styleselector\"\r\n                                styles={this.state.styles}\r\n                                onChange={() => this.handleOnChangeStyleSelector()} />\r\n                            <SubStyleSelector\r\n                                ref=\"substyleselector\"\r\n                                styles={this.state.styles}\r\n                                onChange={() => this.handleOnChangeSubStyleSelector()}\r\n                                currentStyleSelector={this.state.currentStyleSelector} />\r\n\r\n                            <select ref=\"colorselector\" onChange={this.handleOnChangeColorSelector}>\r\n                                {Object.keys(this.state.colors).map((x) => <option\r\n                                    key={x}\r\n                                    value={x}\r\n                                    style={{ backgroundColor: x }}>\r\n                                    {x}\r\n                                </option>)}\r\n                            </select>`\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"add-shadow store\">\r\n                        <div className=\"coins\">Coins: {this.state.currentCoins}</div>\r\n                        <BuyStyle styles={this.state.styles} onClick={this.buy} />\r\n                        <BuyColor ref=\"color\" onClick={this.buy} />\r\n                    </div>\r\n                    {this.state.botsBought > 0 &&\r\n                        <div>{this.state.bots.forEach((key) => {\r\n                            return <div key={`bot${key}`} className=\"add-shadow board\"><BarkingBot botId={`bot${key}`} colors={this.state.colors} styles={this.state.styles} botsBought={this.state.botsBought} onClick={() => this.handleOnClickBot()} /></div>\r\n                        })}</div>\r\n                    }\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n\r\n    handleOnChangeTimesSelector() {\r\n        if (this.refs.timesselector.value > this.state.repeater) { this.refs.timesselector.value = this.state.repeater }\r\n        this.setState({ currentRepeaterSelector: this.refs.timesselector.value })\r\n    }\r\n\r\n    handleOnChangeStyleSelector() {\r\n        this.setState({ currentStyleSelector: this.refs.styleselector.value, })\r\n    }\r\n\r\n    handleOnChangeSubStyleSelector() {\r\n        let mainStyle = this.refs.styleselector.value\r\n        this.setState((prevState) => ({\r\n            styles: {\r\n                ...prevState.styles,\r\n                [mainStyle]: {\r\n                    ...prevState.styles[mainStyle],\r\n                    currentSubStyleSelector: this.refs.substyleselector.value\r\n                }\r\n            }\r\n        }))\r\n    }\r\n\r\n    handleOnChangeColorSelector() {\r\n        this.setState({ currentColorSelector: this.refs.colorselector.value })\r\n    }\r\n\r\n    handleOnChangeStyleRoulette() {\r\n        this.setState((state) => state.styleroulette = !state.styleroulette)\r\n    }\r\n    handleOnChangeColorRoulette() {\r\n        this.setState((state) => state.colorroulette = !state.colorroulette)\r\n    }\r\n\r\n    buy(event) {\r\n        let item = event.target.attributes.buy.nodeValue\r\n\r\n        if (this.state.currentCoins < this.state.shop[item]) {\r\n            alert(\"You don't have enough borkCoins, BORK\")\r\n        }\r\n        else {\r\n            if (item === \"color\") {\r\n                let colorBought = this.refs.color.value\r\n                this.setState((state) => (state.currentCoins = state.currentCoins - state.shop.color))\r\n                this.setState((prevState => ({\r\n                    colors: {\r\n                        ...prevState.colors,\r\n                        [colorBought]: true,\r\n                    }\r\n                })))\r\n            }\r\n            else if (item === \"random-color\") {\r\n                let r = rgbToHex(random(256))\r\n                let g = rgbToHex(random(256))\r\n                let b = rgbToHex(random(256))\r\n                let colorBought = `#${r}${g}${b}`\r\n                this.setState((state) => (state.currentCoins = state.currentCoins - state.shop.randomColor))\r\n                this.setState((prevState => ({\r\n                    colors: {\r\n                        ...prevState.colors,\r\n                        [colorBought]: true,\r\n                    }\r\n                })))\r\n\r\n            }\r\n            else if (item === \"filled\") {\r\n                let styleFamily = event.target.attributes.stylefamily.nodeValue\r\n                this.setState((state) => (state.currentCoins = state.currentCoins - state.shop[item]))\r\n                this.setState((prevState) => ({\r\n                    styles: {\r\n                        ...prevState.styles,\r\n                        [styleFamily]: {\r\n                            ...prevState.styles[styleFamily],\r\n                            subStyles: {\r\n                                ...prevState.styles[styleFamily].subStyles,\r\n                                [item]: {\r\n                                    ...prevState.styles[styleFamily].subStyles[item],\r\n                                    bought: true\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }))\r\n            }\r\n            else if (item === \"repeater\") {\r\n                this.setState((state) => (state.currentCoins = state.currentCoins - state.shop.repeater))\r\n                this.setState((state) => (state.repeater++))\r\n            }\r\n            else if (item === \"bot\") {\r\n                this.setState((state) => (state.currentCoins = state.currentCoins - state.shop.bot))\r\n                this.setState((state) => (state.botsBought++))\r\n                let bots = this.state.bots\r\n                bots.push(bots.length)\r\n                this.setState({ bots: bots })\r\n            }\r\n            else {\r\n                this.setState((state) => (state.currentCoins = state.currentCoins - state.shop[item]))\r\n                this.setState((prevState) => ({\r\n                    styles: {\r\n                        ...prevState.styles,\r\n                        [item]: {\r\n                            ...prevState.styles[item],\r\n                            bought: true\r\n                        }\r\n                    }\r\n                }))\r\n            }\r\n        }\r\n    }\r\n\r\n    draw(times) {\r\n        let ctx = this.refs.canvas.getContext(\"2d\")\r\n        let drawingFunctions = {\r\n            \"lines\": this.drawLine,\r\n            \"triangles\": this.drawTriangle,\r\n            \"squares\": this.drawSquare,\r\n            \"rectangles\": this.drawRectangle,\r\n            \"points4\": this.drawPoints4,\r\n            \"points5\": this.drawPoints5,\r\n            \"circles\": this.drawCircle,\r\n        }\r\n\r\n        for (let i = 0; i < times; i++) {\r\n            let chosenColor = this.state.currentColorSelector\r\n            let chosenStyle = this.state.currentStyleSelector\r\n            let chosenSubStyle = this.state.styles[chosenStyle].currentSubStyleSelector\r\n            this.setState((state) => state.currentCoins++)\r\n            if (this.state.colorroulette === true) {\r\n                let colorArray = Object.keys(this.state.colors)\r\n                let randomIndex = Math.floor(Math.random() * colorArray.length)\r\n                chosenColor = colorArray[randomIndex]\r\n            }\r\n\r\n            if (this.state.styleroulette === true) {\r\n                let styleArray = Object.keys(this.state.styles)\r\n                let boughtStyles = []\r\n                styleArray.forEach((x) => {\r\n                    if (this.state.styles[x].bought === true) { boughtStyles.push(x) }\r\n                })\r\n                let randomIndex = Math.floor(Math.random() * boughtStyles.length)\r\n                chosenStyle = boughtStyles[randomIndex]\r\n\r\n                let subStyleArray = Object.keys(this.state.styles[chosenStyle].subStyles)\r\n                let boughtSubStyles = []\r\n                subStyleArray.forEach((x) => {\r\n                    if (this.state.styles[chosenStyle].bought === true) { boughtSubStyles.push(x) }\r\n                })\r\n                let anotherRandomIndex = Math.floor(Math.random() * boughtSubStyles.length)\r\n                chosenSubStyle = boughtSubStyles[anotherRandomIndex]\r\n            }\r\n            drawingFunctions[chosenStyle](chosenColor, chosenSubStyle, ctx, random(this.props.canvas.width), random(this.props.canvas.height))\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        let ctx = this.refs.canvas.getContext(\"2d\")\r\n        ctx.clearRect(0, 0, this.props.canvas.width, this.props.canvas.height);\r\n    }\r\n\r\n    drawLine(color, subStyle, context, x, y) {\r\n        context.strokeStyle = color\r\n        context.beginPath();\r\n        context.moveTo(this.state.styles.lines.subStyles[subStyle].x, this.state.styles.lines.subStyles[subStyle].y)\r\n        context.lineTo(x, y);\r\n        context.stroke();\r\n    }\r\n\r\n    drawTriangle(color, subStyle, context, x, y) {\r\n        context.beginPath();\r\n        context.moveTo(x, y);\r\n        context.lineTo(random(this.props.canvas.width), random(this.props.canvas.height));\r\n        context.lineTo(random(this.props.canvas.width), random(this.props.canvas.height));\r\n        context.lineTo(x, y);\r\n        if (subStyle === \"simple\") {\r\n            context.strokeStyle = color\r\n            context.stroke()\r\n        }\r\n        else if (subStyle === \"filled\") {\r\n            context.fillStyle = color\r\n            context.fill()\r\n        }\r\n    }\r\n\r\n    drawSquare(color, subStyle, context, x, y) {\r\n        if (subStyle === \"simple\") {\r\n            context.strokeStyle = color\r\n            context.strokeRect(x, y, 75, 75)\r\n        }\r\n        else if (subStyle === \"filled\") {\r\n            context.fillStyle = color\r\n            context.fillRect(x, y, 75, 75)\r\n        }\r\n    }\r\n\r\n    drawRectangle(color, subStyle, context, x, y) {\r\n        if (subStyle === \"simple\") {\r\n            context.strokeStyle = color\r\n            context.strokeRect(x, y, 150, 75)\r\n        }\r\n        else if (subStyle === \"filled\") {\r\n            context.fillStyle = color\r\n            context.fillRect(x, y, 150, 75)\r\n        }\r\n    }\r\n\r\n    drawPoints(number, context, x, y) {\r\n        context.beginPath();\r\n        context.moveTo(x, y);\r\n        for (let i = 0; i < number; i++) { context.lineTo(random(this.props.canvas.width), random(this.props.canvas.height)); }\r\n        context.lineTo(x, y);\r\n    }\r\n\r\n    drawPoints4(color, subStyle, context, x, y) {\r\n        this.drawPoints(4, context, x, y)\r\n        if (subStyle === \"simple\") {\r\n            context.strokeStyle = color\r\n            context.stroke()\r\n        }\r\n        else if (subStyle === \"filled\") {\r\n            context.fillStyle = color\r\n            context.fill()\r\n        }\r\n    }\r\n\r\n    drawPoints5(color, subStyle, context, x, y) {\r\n        this.drawPoints(5, context, x, y)\r\n        if (subStyle === \"simple\") {\r\n            context.strokeStyle = color\r\n            context.stroke()\r\n        }\r\n        else if (subStyle === \"filled\") {\r\n            context.fillStyle = color\r\n            context.fill()\r\n        }\r\n    }\r\n\r\n    drawCircle(color, subStyle, context, x, y) {\r\n        context.beginPath();\r\n        context.arc(x, y, 40, 0, 2 * Math.PI);\r\n        if (subStyle === \"simple\") {\r\n            context.strokeStyle = color\r\n            context.stroke()\r\n        }\r\n        else if (subStyle === \"filled\") {\r\n            context.fillStyle = color\r\n            context.fill()\r\n        }\r\n    }\r\n}\r\n\r\nfunction random(range) {\r\n    let randomNumber = (Math.floor(Math.random() * range))\r\n    return randomNumber\r\n}\r\n\r\nfunction rgbToHex(number) {\r\n    var hex = Number(number).toString(16);\r\n    if (hex.length < 2) {\r\n        hex = \"0\" + hex;\r\n    }\r\n    return hex;\r\n};\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport \"./index.css\"\r\n\r\nclass Index extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            canvas: {\r\n                width: 800,\r\n                height: 500,\r\n            }\r\n        }\r\n    }\r\n    render(){\r\n        return <App canvas={this.state.canvas}/>\r\n    }\r\n}\r\nReactDOM.render(<Index />, document.getElementById(\"root\")) "],"sourceRoot":""}